[package]
name = "fut_rwlock"
version = "0.1.0"
edition = "2018"
authors = ["Plastic Arts Show <plastic.arts.show@gmail.com>"]
description = "A read-write lock that is read and written via Futures."
keywords = ["wasm32", "rwlock", "future", "synch", "mutex"]
categories = ["data-structures", "wasm", "asynchronous"]
license = "Apache-2.0"
repository = "https://github.com/plasticartsshow/fut_rwlock"

[badges]
maintenance = { status = "experimental" }
github = { repository = "plasticartsshow/fut_rwlock", workflow = "Rust" }
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
futures = {version="0.3.16"}

[dev-dependencies]
instant = { version = "0.1.9", features = ["wasm-bindgen", "now"]}
js-function-promisify = {version = "0.2.1"}
js-sys = {version = "0.3.51"}
rand = {version = "0.8.4" }
rand_chacha = {version = "0.3.1"}
wasm-bindgen-test = {version = "0.3.24"}
wasm-bindgen-futures = {version = "0.4.24"}
web-sys = {version = "0.3.51", features = ["Window", "console"]}
getrandom = { version = "0.2", features = ["js"]}

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio = {version="1.8.3"}
tokio-test = {version="0.4.2"}
